# Pipeline to build and push Docker image to Docker Hub when there are changes in the main branch
# Going to use actions from -> https://github.com/marketplace?query=docker
name: CICD pipeline with DockerHub and EC2
run-name: CICD pipeline with DockerHub and EC2
on:
  # The code get pushed when the pull request is merged to the main branch from another branch
  # So, we are going to trigger this workflow when the code is pushed to the main branch
  push:
    branches:
      - main
  workflow_dispatch:
# Defining environment variables for the wh
env:
  SSH_USER: ${{secrets.SSH_USER}}
  SSH_HOST: ${{secrets.SSH_HOST}}
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
jobs:
  docker:
    name: Build and Push Docker Image to DockerHub
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4
      # Ubuntu-latest has Docker pre-installed
      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}} # Docker Hub username
          password: ${{secrets.DOCKER_PASSWORD}} # Docker Hub password
      # Build the Docker image
      - name: Build & Push the Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: itzzjb/docker-react:latest
  ec2:
    needs: docker
    name: Deploy Docker Container to EC2
    runs-on: ubuntu-latest
    steps:
      # First we need to setup SSH
      - name: Setup SSH
        run: |
          # -p flag creates any parent directories if it does not exist
          mkdir -p ~/.ssh/
          # Write the private key to the file called github-actions.pem
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/github-actions.pem
          # Change the permission of the file to read and write
          chmod 600 ~/.ssh/github-actions.pem
      - name: Install and Start Docker on EC2
        run: |
          # We are ssh-ing into the EC2 instance and running the commands (Command are in the quotes)
          # -o StrictHostKeyChecking=no is used to avoid the prompt to add the host to the known hosts
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/github-actions.pem $SSH_USER@$SSH_HOST "
            sudo apt-get update &&
            sudo apt-get install -y docker.io &&
            sudo systemctl start docker &&
            sudo systemctl enable docker 
          "
      - name: Login to Docker Hub on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/github-actions.pem $SSH_USER@$SSH_HOST "
            sudo docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          "
      - name: Pull and Run Docker Image on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/github-actions.pem $SSH_USER@$SSH_HOST "
            sudo docker pull itzzjb/docker-react:latest &&
            # Stop and remove the container if it is already running
            sudo docker stop docker-react &&
            sudo docker rm docker-react &&
            # Run the new container
            sudo docker run --name docker-react  -d -p 80:3000 itzzjb/docker-react:latest
          "
